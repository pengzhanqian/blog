import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as e,o as t}from"./app-BxRTHQDl.js";const n="/blog/assets/image-20250820105303303-TW7KGnCS.png",l={};function h(r,i){return t(),a("div",null,i[0]||(i[0]=[e('<h1 id="【intellj-idea】-配置java-method-live-template" tabindex="-1"><a class="header-anchor" href="#【intellj-idea】-配置java-method-live-template"><span>【Intellj Idea】 配置Java method Live template</span></a></h1><figure><img src="'+n+`" alt="image-20250820105303303" tabindex="0" loading="lazy"><figcaption>image-20250820105303303</figcaption></figure><blockquote><p>具体的<code>Template Text</code> 如下：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">$params$ $</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">$</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">author</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> qianpengzhan</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>动态表达式如下:</p><ul><li><code>params</code></li></ul><div class="language-groovy line-numbers-mode" data-highlighter="shiki" data-ext="groovy" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-groovy"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">groovyScript</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;def result=&#39;&#39;; def params=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">_1</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.replaceAll(&#39;[</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[|</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">]|</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">s]&#39;, &#39;&#39;).split(&#39;,&#39;).toList(); if(params.size() == 1 &amp;&amp; params[0] == &#39;&#39;) return &#39;&#39;; for(i = 0; i &lt; params.size(); i++) {result+=&#39;* @param &#39; + params[i] + ((i &lt; params.size() - 1) ? &#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">n &#39; : &#39;&#39;)};return result&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">methodParameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>return</code></li></ul><div class="language-groovy line-numbers-mode" data-highlighter="shiki" data-ext="groovy" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-groovy"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">groovyScript</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;def rt = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">_1</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">; return rt == &#39;void&#39; ? &#39;&#39; : &#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">n* @return {@link &#39; + (rt.contains(&#39;&lt;&#39;) ? rt.split(&#39;&lt;&#39;)[0] : rt) + &#39;}&#39;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">methodReturnType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></blockquote>`,3)]))}const k=s(l,[["render",h]]),o=JSON.parse('{"path":"/md/question/idea/question_idea_002.html","title":"【Intellj Idea】 配置Java method Live template","lang":"zh-CN","frontmatter":{"description":"【Intellj Idea】 配置Java method Live template image-20250820105303303image-20250820105303303 具体的Template Text 如下： 动态表达式如下: params return","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"【Intellj Idea】 配置Java method Live template\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-27T01:15:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钱鹏展\\",\\"url\\":\\"https://github.com/pengzhanqian\\"}]}"],["meta",{"property":"og:url","content":"https://pengzhanqian.github.io/blog/md/question/idea/question_idea_002.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"【Intellj Idea】 配置Java method Live template"}],["meta",{"property":"og:description","content":"【Intellj Idea】 配置Java method Live template image-20250820105303303image-20250820105303303 具体的Template Text 如下： 动态表达式如下: params return"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-27T01:15:38.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-27T01:15:38.000Z"}]]},"git":{"createdTime":1755674225000,"updatedTime":1756257338000,"contributors":[{"name":"钱鹏展","username":"","email":"873373549@qq.com","commits":2}]},"readingTime":{"minutes":0.28,"words":84},"filePathRelative":"md/question/idea/question_idea_002.md","autoDesc":true}');export{k as comp,o as data};
