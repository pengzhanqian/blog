import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a as t,f as l,d as r,w as n,r as s,o as v,b as o}from"./app-BxRTHQDl.js";const J={},d={class:"table-of-contents"};function c(m,a){const e=s("router-link");return v(),p("div",null,[a[3]||(a[3]=t("h1",{id:"初识java-java特性和优势",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#初识java-java特性和优势"},[t("span",null,"初识JAVA - Java特性和优势")])],-1)),t("nav",d,[t("ul",null,[t("li",null,[r(e,{to:"#【1】java的主要特性"},{default:n(()=>a[0]||(a[0]=[o("【1】Java的主要特性")])),_:1,__:[0]})]),t("li",null,[r(e,{to:"#【2】总结"},{default:n(()=>a[1]||(a[1]=[o("【2】总结")])),_:1,__:[1]})]),t("li",null,[r(e,{to:"#【3】参考资料"},{default:n(()=>a[2]||(a[2]=[o("【3】参考资料")])),_:1,__:[2]})])])]),a[4]||(a[4]=l('<blockquote><p>说在前面的话，本文为个人学习<a href="https://www.bilibili.com/video/BV1RK4y1g7A5/?spm_id_from=333.337.search-card.all.click&amp;vd_source=65c7f6924d2d8ba5fa0d4c448818e08a" target="_blank" rel="noopener noreferrer">B站免费的马士兵java初级教程</a>后进行总结的文章，本文主要用于<b>初步了解JAVA</b>。</p></blockquote><h2 id="【1】java的主要特性" tabindex="-1"><a class="header-anchor" href="#【1】java的主要特性"><span>【1】Java的主要特性</span></a></h2><ul><li><p><strong>Java 语言是简单的：</strong></p><p>Java 语言的语法与 C 语言和 C++ 语言很接近，使得大多数程序员很容易学习和使用。另一方面，Java 丢弃了 C++ 中很少使用的、很难理解的、令人迷惑的那些特性，如操作符重载、多继承、自动的强制类型转换。特别地，Java 语言不使用指针，而是引用。并提供了自动分配和回收内存空间，使得程序员不必为内存管理而担忧。</p></li><li><p><strong>Java 语言是面向对象的：</strong></p><p>Java 语言提供类、接口和继承等面向对象的特性，为了简单起见，只支持类之间的单继承，但支持接口之间的多继承，并支持类与接口之间的实现机制（关键字为 implements）。Java 语言全面支持动态绑定，而 C++语言只对虚函数使用动态绑定。总之，Java语言是一个纯的面向对象程序设计语言。</p></li><li><p><strong>Java语言是分布式的：</strong></p><p>Java 语言支持 Internet 应用的开发，在基本的 Java 应用编程接口中有一个网络应用编程接口（java net），它提供了用于网络应用编程的类库，包括 URL、URLConnection、Socket、ServerSocket 等。Java 的 RMI（远程方法激活）机制也是开发分布式应用的重要手段。</p></li><li><p>Java 语言是健壮的：</p><p>Java 的强类型机制、异常处理、垃圾的自动收集等是 Java 程序健壮性的重要保证。对指针的丢弃是 Java 的明智选择。Java 的安全检查机制使得 Java 更具健壮性。</p></li><li><p><strong>Java语言是安全的：</strong></p><p>Java通常被用在网络环境中，为此，Java 提供了一个安全机制以防恶意代码的攻击。除了Java 语言具有的许多安全特性以外，Java 对通过网络下载的类具有一个安全防范机制（类 ClassLoader），如分配不同的名字空间以防替代本地的同名类、字节代码检查，并提供安全管理机制（类 SecurityManager）让 Java 应用设置安全哨兵。</p></li><li><p><strong>Java 语言是体系结构中立的：</strong></p><p>Java 程序（后缀为 java 的文件）在 Java 平台上被编译为体系结构中立的字节码格式（后缀为 class 的文件），然后可以在实现这个 Java 平台的任何系统中运行。这种途径适合于异构的网络环境和软件的分发。</p></li><li><p><strong>Java 语言是可移植的：</strong></p><p>这种可移植性来源于体系结构中立性，另外，Java 还严格规定了各个基本数据类型的长度。Java 系统本身也具有很强的可移植性，Java 编译器是用 Java 实现的，Java 的运行环境是用 ANSI C 实现的。</p></li><li><p><strong>Java 语言是解释型的：</strong></p><p>如前所述，Java 程序在 Java 平台上被编译为字节码格式，然后可以在实现这个 Java 平台的任何系统中运行。在运行时，Java 平台中的 Java 解释器对这些字节码进行解释执行，执行过程中需要的类在联接阶段被载入到运行环境中。</p></li><li><p><strong>Java 是高性能的：</strong></p><p>与那些解释型的高级脚本语言相比，Java 的确是高性能的。事实上，Java 的运行速度随着 JIT(Just-In-Time）编译器技术的发展越来越接近于 C++。</p></li><li><p><strong>Java 语言是多线程的：</strong></p><p>在 Java 语言中，线程是一种特殊的对象，它必须由 Thread 类或其子（孙）类来创建。通常有两种方法来创建线程：其一，使用型构为 Thread(Runnable) 的构造子类将一个实现了 Runnable 接口的对象包装成一个线程，其二，从 Thread 类派生出子类并重写 run 方法，使用该子类创建的对象即为线程。值得注意的是 Thread 类已经实现了 Runnable 接口，因此，任何一个线程均有它的 run 方法，而 run 方法中包含了线程所要运行的代码。线程的活动由一组方法来控制。Java 语言支持多个线程的同时执行，并提供多线程之间的同步机制（关键字为 synchronized）。</p></li><li><p><strong>Java 语言是动态的：</strong></p><p>Java 语言的设计目标之一是适应于动态变化的环境。Java 程序需要的类能够动态地被载入到运行环境，也可以通过网络来载入所需要的类。这也有利于软件的升级。另外，Java 中的类有一个运行时刻的表示，能进行运行时刻的类型检查。</p></li></ul><h2 id="【2】总结" tabindex="-1"><a class="header-anchor" href="#【2】总结"><span>【2】总结</span></a></h2><p><strong>总结：一句话：java很好！</strong><br> 但是，并不是说学习了java，以后所有的东西都要用java开发了：某些领域其他语言有更出色的表现，比如，Objective C和后来的Swift在iOS设备上就有着无可取代的地位。浏览器中的处理几乎完全由JavaScript掌控。Windows程序通常都用C++或C#编写。Java在服务器端编程和跨平台客户端应用领域则很有优势。<br> 只能说，不同的语言之间，平分秋色！</p><h2 id="【3】参考资料" tabindex="-1"><a class="header-anchor" href="#【3】参考资料"><span>【3】参考资料</span></a></h2><ul><li><a href="https://www.bilibili.com/video/BV1RK4y1g7A5/?spm_id_from=333.337.search-card.all.click&amp;vd_source=65c7f6924d2d8ba5fa0d4c448818e08a" target="_blank" rel="noopener noreferrer">B站免费的马士兵java初级教程</a></li></ul>',7))])}const h=i(J,[["render",c]]),f=JSON.parse('{"path":"/md/note/java/first/first_003.html","title":"初识JAVA - Java特性和优势","lang":"zh-CN","frontmatter":{"description":"初识JAVA - Java特性和优势 说在前面的话，本文为个人学习B站免费的马士兵java初级教程后进行总结的文章，本文主要用于初步了解JAVA。 【1】Java的主要特性 Java 语言是简单的： Java 语言的语法与 C 语言和 C++ 语言很接近，使得大多数程序员很容易学习和使用。另一方面，Java 丢弃了 C++ 中很少使用的、很难理解的、令...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"初识JAVA - Java特性和优势\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-04T06:08:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钱鹏展\\",\\"url\\":\\"https://github.com/pengzhanqian\\"}]}"],["meta",{"property":"og:url","content":"https://pengzhanqian.github.io/blog/md/note/java/first/first_003.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"初识JAVA - Java特性和优势"}],["meta",{"property":"og:description","content":"初识JAVA - Java特性和优势 说在前面的话，本文为个人学习B站免费的马士兵java初级教程后进行总结的文章，本文主要用于初步了解JAVA。 【1】Java的主要特性 Java 语言是简单的： Java 语言的语法与 C 语言和 C++ 语言很接近，使得大多数程序员很容易学习和使用。另一方面，Java 丢弃了 C++ 中很少使用的、很难理解的、令..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-04T06:08:40.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-04T06:08:40.000Z"}]]},"git":{"createdTime":1751549516000,"updatedTime":1751609320000,"contributors":[{"name":"钱鹏展","username":"","email":"873373549@qq.com","commits":2}]},"readingTime":{"minutes":4.67,"words":1402},"filePathRelative":"md/note/java/first/first_003.md","autoDesc":true}');export{h as comp,f as data};
