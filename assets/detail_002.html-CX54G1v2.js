import{_ as h}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as s,f as k,d as n,w as l,r as p,o as r,b as t}from"./app-BxRTHQDl.js";const d={},g={class:"table-of-contents"};function o(A,i){const a=p("router-link");return r(),e("div",null,[i[11]||(i[11]=s("h1",{id:"java代码细节-可变参数-varargs",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#java代码细节-可变参数-varargs"},[s("span",null,"JAVA代码细节 - 可变参数(Varargs)")])],-1)),s("nav",g,[s("ul",null,[s("li",null,[n(a,{to:"#【1】基本概念"},{default:l(()=>i[0]||(i[0]=[t("【1】基本概念")])),_:1,__:[0]})]),s("li",null,[n(a,{to:"#【2】核心特性"},{default:l(()=>i[1]||(i[1]=[t("【2】核心特性")])),_:1,__:[1]})]),s("li",null,[n(a,{to:"#【3】使用示例"},{default:l(()=>i[2]||(i[2]=[t("【3】使用示例")])),_:1,__:[2]}),s("ul",null,[s("li",null,[n(a,{to:"#_3-1-基础用法"},{default:l(()=>i[3]||(i[3]=[t("3.1 基础用法")])),_:1,__:[3]})]),s("li",null,[n(a,{to:"#_3-2-与其他参数配合"},{default:l(()=>i[4]||(i[4]=[t("3.2 与其他参数配合")])),_:1,__:[4]})])])]),s("li",null,[n(a,{to:"#【4】注意事项"},{default:l(()=>i[5]||(i[5]=[t("【4】注意事项")])),_:1,__:[5]})]),s("li",null,[n(a,{to:"#【5】最佳实践"},{default:l(()=>i[6]||(i[6]=[t("【5】最佳实践")])),_:1,__:[6]})]),s("li",null,[n(a,{to:"#【6】实际应用场景"},{default:l(()=>i[7]||(i[7]=[t("【6】实际应用场景")])),_:1,__:[7]})]),s("li",null,[n(a,{to:"#【7】与数组参数的区别"},{default:l(()=>i[8]||(i[8]=[t("【7】与数组参数的区别")])),_:1,__:[8]})]),s("li",null,[n(a,{to:"#【8】扩展知识"},{default:l(()=>i[9]||(i[9]=[t("【8】扩展知识")])),_:1,__:[9]})]),s("li",null,[n(a,{to:"#【9】日常开发注意事项"},{default:l(()=>i[10]||(i[10]=[t("【9】日常开发注意事项")])),_:1,__:[10]})])])]),i[12]||(i[12]=k(`<blockquote><p>说在前面的话，本文为日常积累的一些<code>Java</code>相关代码细节积累。</p></blockquote><h2 id="【1】基本概念" tabindex="-1"><a class="header-anchor" href="#【1】基本概念"><span>【1】基本概念</span></a></h2><p>可变参数(<code>Variable Arguments</code>)是Java 5引入的特性，允许方法接受‌<strong>零个或多个</strong>‌指定类型的参数。</p><p>语法格式：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> methodName</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(dataType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">...</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> variableName</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 方法体</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="【2】核心特性" tabindex="-1"><a class="header-anchor" href="#【2】核心特性"><span>【2】核心特性</span></a></h2><ul><li><b>三个点(...)</b> 表示可变参数</li><li>可变参数在方法内部作为‌<strong>数组</strong>‌处理</li><li>必须是方法的‌<strong>最后一个参数</strong>‌</li><li>一个方法只能有‌<strong>一个</strong>‌可变参数</li></ul><h2 id="【3】使用示例" tabindex="-1"><a class="header-anchor" href="#【3】使用示例"><span>【3】使用示例</span></a></h2><h3 id="_3-1-基础用法" tabindex="-1"><a class="header-anchor" href="#_3-1-基础用法"><span>3.1 基础用法</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sum</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">...</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> numbers</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> total </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> num </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> numbers) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">        total </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> num</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> total</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 调用方式</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sum</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 返回6</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sum</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 返回15</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sum</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">           // 返回0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-与其他参数配合" tabindex="-1"><a class="header-anchor" href="#_3-2-与其他参数配合"><span>3.2 与其他参数配合</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> printInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> prefix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">...</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> items</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(prefix </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;: &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> item </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> items) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(item </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot; &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 调用</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">printInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Fruits&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Apple&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Banana&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Orange&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="【4】注意事项" tabindex="-1"><a class="header-anchor" href="#【4】注意事项"><span>【4】注意事项</span></a></h2><ul><li><strong>重载问题</strong>‌：可变参数方法可能造成方法重载歧义</li><li>‌<strong>性能考虑</strong>‌：频繁调用会创建多个数组对象</li><li>‌<strong>null处理</strong>‌：传入null时需要特别处理</li><li>‌<strong>类型安全</strong>‌：编译器不会检查所有参数类型是否一致</li></ul><h2 id="【5】最佳实践" tabindex="-1"><a class="header-anchor" href="#【5】最佳实践"><span>【5】最佳实践</span></a></h2><ul><li>优先使用集合类型(如List)替代可变参数（当API稳定性重要时）</li><li>添加清晰的文档说明参数要求</li><li>考虑提供重载方法优化常见用例</li><li>对可变参数进行非空检查</li></ul><h2 id="【6】实际应用场景" tabindex="-1"><a class="header-anchor" href="#【6】实际应用场景"><span>【6】实际应用场景</span></a></h2><ol><li>日志工具类方法</li><li>字符串拼接/格式化</li><li>数学计算工具类</li><li>测试断言方法</li><li>命令行参数处理</li></ol><h2 id="【7】与数组参数的区别" tabindex="-1"><a class="header-anchor" href="#【7】与数组参数的区别"><span>【7】与数组参数的区别</span></a></h2><table><thead><tr><th>特性</th><th>可变参数</th><th>数组参数</th></tr></thead><tbody><tr><td>调用语法</td><td>可直接传多个值</td><td>必须包装成数组</td></tr><tr><td>空参数</td><td>允许不传参数</td><td>必须显式传null或空数组</td></tr><tr><td>方法内部</td><td>当作数组处理</td><td>本身就是数组</td></tr><tr><td>重载优先级</td><td>低于固定参数方法</td><td>与普通方法同级</td></tr></tbody></table><h2 id="【8】扩展知识" tabindex="-1"><a class="header-anchor" href="#【8】扩展知识"><span>【8】扩展知识</span></a></h2><p>Java编译器对可变参数的处理实际上是：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 源代码</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> method</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">...</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> strs</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 编译后等价于</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> method</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[] strs)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最新Java版本(17+)中，可变参数可以与<code>@SafeVarargs</code>注解配合使用，消除泛型可变参数的警告。</p><h2 id="【9】日常开发注意事项" tabindex="-1"><a class="header-anchor" href="#【9】日常开发注意事项"><span>【9】日常开发注意事项</span></a></h2><blockquote><ul><li>可变参数：作用提供了一个方法，参数的个数是可变的 ,解决了部分方法的重载问题 <ul><li>int...num</li><li>double...num</li><li>boolean...num</li></ul></li><li>可变参数在JDK1.5之后加入的新特性</li><li>方法的内部对可变参数的处理跟数组是一样</li><li>可变参数和其他数据一起作为形参的时候，可变参数一定要放在最后</li><li>我们自己在写代码的时候，建议不要使用可变参数。</li><li>1个方法最多只有1个可变参数</li></ul></blockquote>`,26))])}const c=h(d,[["render",o]]),m=JSON.parse('{"path":"/md/note/java/detail/detail_002.html","title":"JAVA代码细节 - 可变参数(Varargs)","lang":"zh-CN","frontmatter":{"description":"JAVA代码细节 - 可变参数(Varargs) 说在前面的话，本文为日常积累的一些Java相关代码细节积累。 【1】基本概念 可变参数(Variable Arguments)是Java 5引入的特性，允许方法接受‌零个或多个‌指定类型的参数。 语法格式： 【2】核心特性 三个点(...) 表示可变参数 可变参数在方法内部作为‌数组‌处理 必须是方法的...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JAVA代码细节 - 可变参数(Varargs)\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-29T07:48:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钱鹏展\\",\\"url\\":\\"https://github.com/pengzhanqian\\"}]}"],["meta",{"property":"og:url","content":"https://pengzhanqian.github.io/blog/md/note/java/detail/detail_002.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"JAVA代码细节 - 可变参数(Varargs)"}],["meta",{"property":"og:description","content":"JAVA代码细节 - 可变参数(Varargs) 说在前面的话，本文为日常积累的一些Java相关代码细节积累。 【1】基本概念 可变参数(Variable Arguments)是Java 5引入的特性，允许方法接受‌零个或多个‌指定类型的参数。 语法格式： 【2】核心特性 三个点(...) 表示可变参数 可变参数在方法内部作为‌数组‌处理 必须是方法的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-29T07:48:27.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-29T07:48:27.000Z"}]]},"git":{"createdTime":1753775307000,"updatedTime":1753775307000,"contributors":[{"name":"钱鹏展","username":"","email":"873373549@qq.com","commits":1}]},"readingTime":{"minutes":2.43,"words":730},"filePathRelative":"md/note/java/detail/detail_002.md","autoDesc":true}');export{c as comp,m as data};
